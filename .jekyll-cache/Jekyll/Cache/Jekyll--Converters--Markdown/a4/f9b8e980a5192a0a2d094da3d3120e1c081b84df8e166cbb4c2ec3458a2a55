I" @<p><br /></p>

<h2 id="0-자바의-특징">0. 자바의 특징</h2>

<blockquote>
  <ul>
    <li>OOP is A.P.I.E ?
      <ul>
        <li>OOP(Object-Oriented-Programming = 객체지향 프로그래밍) is<br />
<strong>Abstraction. Polymorphism. Inheritance. Encapsulation</strong></li>
      </ul>
    </li>
    <li>GC(Garbage Collection)
      <ul>
        <li>더 이상 사용하지 않는 메모리를 자동으로 정리하는 기능</li>
      </ul>
    </li>
  </ul>
</blockquote>

<h2 id="1-변수">1. 변수</h2>

<blockquote>
  <ul>
    <li>수학에서는 변하는 수 x</li>
    <li>컴퓨터에서는 메모리 공간(그릇)</li>
    <li>메모리 공간에 값(value)을 할당(assign) 후 사용</li>
    <li>공간의 크기는 타입별로 달라짐</li>
  </ul>
</blockquote>

<h2 id="2-type-이란">2. Type 이란?</h2>

<blockquote>
  <ul>
    <li>데이터의 종류</li>
    <li><strong>Primitive Type</strong> (기본형)
      <ul>
        <li>미리 정해진 크기의 Memory Size로 표현</li>
        <li>변수 자체에 값 저장</li>
      </ul>
    </li>
    <li><strong>Reference Type</strong> (참조형)
      <ul>
        <li>크기가 미리 정해질 수 없는 데이터의 표현</li>
        <li>변수에는 실제 값을 참조할 수 있는 주소만 저장</li>
      </ul>
    </li>
  </ul>
</blockquote>

<blockquote>
  <ul>
    <li>Primitive Type
      <blockquote>
        <table>
          <thead>
            <tr>
              <th style="text-align: center">구분</th>
              <th>Type</th>
              <th style="text-align: center">bit 수</th>
              <th>값</th>
              <th>Wrapper Class</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td style="text-align: center">논리형</td>
              <td>boolean</td>
              <td style="text-align: center"> </td>
              <td>true/false</td>
              <td>Boolean</td>
            </tr>
            <tr>
              <td style="text-align: center">정수형</td>
              <td>byte</td>
              <td style="text-align: center">8</td>
              <td>-2^7 ~ 2^7-1 (-128 ~ 127)</td>
              <td>Byte</td>
            </tr>
            <tr>
              <td style="text-align: center"> </td>
              <td>short</td>
              <td style="text-align: center">16</td>
              <td>-2^15 ~ 2^15-1 (-32768 ~ 32767)</td>
              <td>Short</td>
            </tr>
            <tr>
              <td style="text-align: center"> </td>
              <td>int</td>
              <td style="text-align: center">32</td>
              <td>-2^31 ~ 2^31-1 (-2147483648 ~ 2147483647, 대략 20억)</td>
              <td>Integer</td>
            </tr>
            <tr>
              <td style="text-align: center"> </td>
              <td>long</td>
              <td style="text-align: center">32</td>
              <td>-2^31 ~ 2^31-1 (-9223372036854775808 ~ 9223372036854775807)</td>
              <td>Long</td>
            </tr>
            <tr>
              <td style="text-align: center">실수형</td>
              <td>float</td>
              <td style="text-align: center">32</td>
              <td>float f = 0.1234567890123456789f; =&gt; 0.12345679</td>
              <td>Float</td>
            </tr>
            <tr>
              <td style="text-align: center"> </td>
              <td>double</td>
              <td style="text-align: center">64</td>
              <td>double d = 0.1234567890123456789; =&gt; 0.12345678901234568</td>
              <td>Double</td>
            </tr>
            <tr>
              <td style="text-align: center">문자형</td>
              <td>char</td>
              <td style="text-align: center">16</td>
              <td>\u0000 ~ \uffff(0~2^16-1)</td>
              <td>Character</td>
            </tr>
          </tbody>
        </table>

        <ul>
          <li><strong>총 8개</strong></li>
        </ul>
      </blockquote>
    </li>
  </ul>
</blockquote>

<blockquote>
  <ul>
    <li>Reference Type
      <blockquote>
        <ul>
          <li>나머지 모든 데이터 타입(String, int[], Node와 같은 사용자 정의 타입 …)</li>
        </ul>
      </blockquote>
    </li>
  </ul>
</blockquote>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 기본문제</span>
<span class="kt">int</span> <span class="n">i1</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">MAX_VALUE</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">i2</span> <span class="o">=</span> <span class="n">i1</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span>

<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">i2</span><span class="o">);</span>

<span class="c1">//실행결과</span>
<span class="c1">//overflow</span>
</code></pre></div></div>

<h2 id="3-형-변환type-casting">3. 형 변환(Type Casting)</h2>

<blockquote>
  <ul>
    <li>변수의 타입을 다른 타입으로 변환하는 것
      <ul>
        <li>char &lt;= =&gt; int</li>
      </ul>
    </li>
    <li>Primitive는 Primitive끼리, Reference는 Reference기리 형 변환 가능
      <ul>
        <li>boolean은 다른 기본 타입과 호환되지 않음</li>
        <li>기본 타입과 참조형의 형 변환을 위해서 Wrapper 클래스 활용</li>
      </ul>
    </li>
    <li>형 변환 방법
      <ul>
        <li>형 변환 연산자(괄호) 사용</li>
      </ul>
    </li>
  </ul>
</blockquote>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">double</span> <span class="n">d</span> <span class="o">=</span> <span class="mf">100.5</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">result</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span><span class="n">d</span><span class="o">;</span>
<span class="c1">// d = 100.5</span>
<span class="c1">// result = 100</span>
</code></pre></div></div>

<blockquote>
  <ul>
    <li>타입의 표현 범위
      <ul>
        <li>byte -&gt; short -&gt; int -&gt; long -&gt; float -&gt; double</li>
        <li>char  -&gt; int …</li>
      </ul>
    </li>
    <li>타입의 표현 범위가 커지는 방향으로 할당할 경우는 묵시적 형 변환 발생</li>
    <li>명시적 형 변환은 값 손실이 발생할 수 있다.</li>
    <li>묵시적 형 변환은 값 손실 걱정없이 JVM이 서비스 해줌</li>
  </ul>
</blockquote>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//묵시적 형 변환(값 손실 x)       //명시적 형 변환 (값 손실 o)</span>
<span class="kt">byte</span> <span class="n">b</span> <span class="o">=</span> <span class="mi">10</span><span class="o">;</span>                    <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">300</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span><span class="n">b</span><span class="o">;</span>                 <span class="kt">byte</span> <span class="n">b</span> <span class="o">=</span> <span class="o">(</span><span class="kt">byte</span><span class="o">)</span><span class="n">i</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">i2</span> <span class="o">=</span> <span class="n">b</span><span class="o">;</span>
</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//기본문제</span>
<span class="kt">int</span> <span class="n">i1</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">MAX_VALUE</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">i2</span> <span class="o">=</span> <span class="n">i1</span> <span class="o">+</span> <span class="mi">1</span><span class="o">;</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">i2</span><span class="o">);</span> <span class="c1">// -2147483648</span>

<span class="kt">long</span> <span class="n">l1</span> <span class="o">=</span> <span class="n">i1</span> <span class="o">+</span> <span class="mi">1</span><span class="o">;</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">l1</span><span class="o">);</span> <span class="c1">// -2147483648</span>

<span class="kt">long</span> <span class="n">l2</span> <span class="o">=</span> <span class="o">(</span><span class="kt">long</span><span class="o">)(</span><span class="n">i1</span> <span class="o">+</span> <span class="mi">1</span><span class="o">);</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">l2</span><span class="o">);</span> <span class="c1">// -2147483648</span>

<span class="kt">long</span> <span class="n">l3</span> <span class="o">=</span> <span class="o">(</span><span class="kt">long</span><span class="o">(</span><span class="n">i1</span><span class="o">)</span> <span class="o">+</span> <span class="mi">1</span><span class="o">);</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">l3</span><span class="o">);</span> <span class="c1">// 2147483648</span>

<span class="kt">int</span> <span class="n">i3</span> <span class="o">=</span> <span class="mi">1000000</span> <span class="o">*</span> <span class="mi">1000000</span> <span class="o">/</span> <span class="mi">100000</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">i4</span> <span class="o">=</span> <span class="mi">1000000</span> <span class="o">/</span> <span class="mi">100000</span> <span class="o">*</span> <span class="mi">100000</span><span class="o">;</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">i3</span> <span class="o">+</span> <span class="s">" : "</span> <span class="o">+</span> <span class="n">i4</span><span class="o">);</span> <span class="c1">// -7273 : 1000000 , 컴퓨터는 앞에서부터 계산하기 때문에</span>

</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">k</span> <span class="o">=</span> <span class="mi">66</span><span class="o">;</span>
<span class="kt">char</span> <span class="n">c</span> <span class="o">=</span> <span class="o">(</span><span class="kt">char</span><span class="o">)</span><span class="n">k</span><span class="o">;</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">c</span><span class="o">);</span> <span class="c1">// B</span>

<span class="n">c</span><span class="o">=</span><span class="sc">'A'</span><span class="o">;</span>
<span class="n">k</span><span class="o">=</span><span class="n">c</span><span class="o">;</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">k</span><span class="o">);</span> <span class="c1">//65</span>

<span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">10</span><span class="o">/</span><span class="mi">3</span><span class="o">;</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">i</span><span class="o">);</span> <span class="c1">//3</span>

<span class="kt">float</span> <span class="n">f</span> <span class="o">=</span> <span class="mi">10</span><span class="o">/</span><span class="mi">3</span><span class="o">;</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">f</span><span class="o">);</span> <span class="c1">//3.0</span>

<span class="kt">float</span> <span class="n">f2</span> <span class="o">=</span> <span class="mi">10</span><span class="n">f</span> <span class="o">/</span> <span class="mi">3</span><span class="no">F</span><span class="o">;</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">f2</span><span class="o">);</span> <span class="c1">//3.3333333</span>

<span class="kt">double</span> <span class="n">d</span> <span class="o">=</span> <span class="mi">10</span><span class="n">d</span> <span class="o">/</span> <span class="mi">3</span><span class="no">D</span><span class="o">;</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">d</span><span class="o">);</span> <span class="c1">//3.3333333333333335</span>

<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">((</span><span class="mi">10</span><span class="o">/</span><span class="mi">3</span><span class="o">)*</span><span class="mi">3</span><span class="o">);</span> <span class="c1">//9</span>
</code></pre></div></div>

<h3 id="wrapper-클래스">Wrapper 클래스?</h3>

<blockquote>
  <p><strong>래퍼 클래스(Wrapper Class)</strong>는 산술연산을 위해 정의된 클래스가 아니므로 인스턴스에 저장된 값을 변경할 수 없다.<br />
단지, 값을 참조하기 위해 새로운 인스턴스를 생성하고, 생성된 인스턴스 값만을 참고할 수 있다.<br />
<strong>박싱</strong> : 기본타입 -&gt; 래퍼클래스 / <strong>언박싱</strong> : 래퍼클래스 -&gt; 기본타입 (JDK 1.5부터는 컴파일러가 자동처리, 오토 박싱, 오토 언박싱)</p>
</blockquote>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">Integer</span> <span class="n">num</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Integer</span><span class="o">(</span><span class="mi">17</span><span class="o">);</span> <span class="c1">//박싱</span>
<span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="n">num</span><span class="o">.</span><span class="na">intValue</span><span class="o">();</span> <span class="c1">//언박싱</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">n</span><span class="o">);</span>

<span class="nc">Character</span> <span class="n">ch</span> <span class="o">=</span> <span class="sc">'X'</span><span class="o">;</span> <span class="c1">// 오토박싱, Character ch = new Character('X')</span>
<span class="kt">char</span> <span class="n">c</span> <span class="o">=</span> <span class="n">ch</span><span class="o">;</span> <span class="c1">//오토언박싱, char c = ch.charValue();</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">c</span><span class="o">);</span>

<span class="c1">//실행결과</span>
<span class="c1">//17</span>
<span class="c1">//X</span>
</code></pre></div></div>
:ET