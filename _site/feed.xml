<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-04-30T17:28:54+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">rudgh46</title><subtitle>뭐든 배우면 다 자산이 되겠죠!</subtitle><author><name>김경호</name></author><entry><title type="html">[Java 01. 기본 문법 및 응용(연산자, 조건문)]</title><link href="http://localhost:4000/java/Java_Basic-2/" rel="alternate" type="text/html" title="[Java 01. 기본 문법 및 응용(연산자, 조건문)]" /><published>2022-01-05T00:00:00+09:00</published><updated>2022-01-05T00:00:00+09:00</updated><id>http://localhost:4000/java/Java_Basic%202</id><content type="html" xml:base="http://localhost:4000/java/Java_Basic-2/"><![CDATA[<p><br /></p>

<h2 id="1-연산자란">1. 연산자란?</h2>

<blockquote>
  <ul>
    <li>어떤 기능을 수행하는 기호(+,-,*,/ …)</li>
  </ul>
</blockquote>

<blockquote>
  <ul>
    <li>연산자의 종류와 우선순위 및 결합 방향
      <blockquote>
        <table>
          <thead>
            <tr>
              <th style="text-align: left">연산기호</th>
              <th style="text-align: center">결합방향</th>
              <th style="text-align: center">우선순위</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td style="text-align: left">(),.</td>
              <td style="text-align: center"> </td>
              <td style="text-align: center"> </td>
            </tr>
            <tr>
              <td style="text-align: left">++ – +(부호) -(부호) ~ ! (type):형변환</td>
              <td style="text-align: center">&lt;-</td>
              <td style="text-align: center">높음</td>
            </tr>
            <tr>
              <td style="text-align: left">* / %</td>
              <td style="text-align: center">-&gt;</td>
              <td style="text-align: center"> </td>
            </tr>
            <tr>
              <td style="text-align: left">+(덧셈) -(뺄셈)</td>
              <td style="text-align: center">-&gt;</td>
              <td style="text-align: center"> </td>
            </tr>
            <tr>
              <td style="text-align: left">« » »&gt;</td>
              <td style="text-align: center">-&gt;</td>
              <td style="text-align: center"> </td>
            </tr>
            <tr>
              <td style="text-align: left">&lt; &gt; &lt;= &gt;= instanceof</td>
              <td style="text-align: center">-&gt;</td>
              <td style="text-align: center"> </td>
            </tr>
            <tr>
              <td style="text-align: left">== !=</td>
              <td style="text-align: center">-&gt;</td>
              <td style="text-align: center"> </td>
            </tr>
            <tr>
              <td style="text-align: left">&amp;</td>
              <td style="text-align: center">-&gt;</td>
              <td style="text-align: center"> </td>
            </tr>
            <tr>
              <td style="text-align: left">^</td>
              <td style="text-align: center">-&gt;</td>
              <td style="text-align: center"> </td>
            </tr>
            <tr>
              <td style="text-align: left">ㅣ</td>
              <td style="text-align: center">-&gt;</td>
              <td style="text-align: center"> </td>
            </tr>
            <tr>
              <td style="text-align: left">&amp;&amp;</td>
              <td style="text-align: center">-&gt;</td>
              <td style="text-align: center"> </td>
            </tr>
            <tr>
              <td style="text-align: left">ㅣㅣ</td>
              <td style="text-align: center">-&gt;</td>
              <td style="text-align: center"> </td>
            </tr>
            <tr>
              <td style="text-align: left">? :</td>
              <td style="text-align: center">-&gt;</td>
              <td style="text-align: center"> </td>
            </tr>
            <tr>
              <td style="text-align: left">= *= /= %= += -= «= »= »&gt;= &amp;= ^= ㅣ=</td>
              <td style="text-align: center">&lt;-</td>
              <td style="text-align: center">낮음</td>
            </tr>
          </tbody>
        </table>
      </blockquote>
      <ul>
        <li><strong>우선순위는 헷갈리기 쉬우니까 (소괄호) 이용하자</strong></li>
      </ul>
    </li>
  </ul>
</blockquote>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">산술</span> <span class="n">이항</span> <span class="n">연산자는</span> <span class="n">연산</span> <span class="n">전에</span> <span class="n">피</span> <span class="n">연산자의</span> <span class="n">타입을</span> <span class="n">일치시킨다</span><span class="o">.</span>

<span class="kt">byte</span> <span class="n">b1</span> <span class="o">=</span> <span class="mi">10</span><span class="o">;</span>
<span class="kt">byte</span> <span class="n">b2</span> <span class="o">=</span> <span class="mi">20</span><span class="o">;</span>
<span class="kt">byte</span> <span class="n">b3</span> <span class="o">=</span> <span class="n">b1</span> <span class="o">+</span> <span class="n">b2</span><span class="o">;</span> <span class="c1">//Type mismatch: cannot convert from int to byte</span>
<span class="c1">//피연산자의 크기가 4byte(int) 미만이면 int로 변경한 후 연산 진행</span>

<span class="kt">int</span> <span class="n">i1</span> <span class="o">=</span> <span class="mi">10</span><span class="o">;</span>
<span class="kt">long</span> <span class="n">l1</span> <span class="o">=</span> <span class="mi">20</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">i2</span> <span class="o">=</span> <span class="n">i1</span> <span class="o">+</span> <span class="n">l1</span><span class="o">;</span> <span class="c1">//Type mismatch: cannot convert from long to int</span>
<span class="c1">//두 개의 피연산자 중 큰 타입으로 형 변환 후 연산 진행</span>

<span class="kt">float</span> <span class="n">f1</span> <span class="o">=</span> <span class="mf">10.0</span><span class="o">;</span>
<span class="kt">float</span> <span class="n">f2</span> <span class="o">=</span> <span class="n">f1</span> <span class="o">+</span> <span class="mf">20.0</span><span class="o">;</span> <span class="c1">//Type mismatch: cannot convert from double to float</span>
</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">10</span><span class="o">;</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">((</span><span class="n">i</span><span class="o">--)%</span><span class="mi">2</span><span class="o">);</span> <span class="c1">//0</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(--</span><span class="n">i</span><span class="o">);</span>     <span class="c1">//8</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">i</span><span class="o">++);</span>     <span class="c1">//8</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(++(</span><span class="n">i</span><span class="o">-</span><span class="mi">2</span><span class="o">));</span> <span class="c1">//컴파일 에러</span>
<span class="o">++,</span> <span class="o">--</span><span class="n">는</span> <span class="n">변수에만</span> <span class="n">사용할</span> <span class="n">수</span> <span class="n">있다</span><span class="o">.</span>
</code></pre></div></div>

<h3 id="비트-논리-연산자">비트 논리 연산자</h3>

<blockquote>
  <ul>
    <li><strong>2진수 형태로 변환 후 연산</strong>
      <blockquote>
        <table>
          <thead>
            <tr>
              <th style="text-align: center">연산자</th>
              <th>연산자 기능</th>
              <th style="text-align: center">결합방향</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td style="text-align: center">&amp;</td>
              <td>두 피 연산자의 비트 값이 모두 1인 경우만 1, 나머지는 0 (ex&gt; a&amp;b)</td>
              <td style="text-align: center">-&gt;</td>
            </tr>
            <tr>
              <td style="text-align: center">ㅣ</td>
              <td>두 피 연산자의 비트 값이 모두 0인 경우만 0, 나머지는 1 (ex&gt; aㅣb)</td>
              <td style="text-align: center">-&gt;</td>
            </tr>
            <tr>
              <td style="text-align: center">^</td>
              <td>두 피 연산자의 비트 값이 서로 다르면 1, 같으면 0 (ex&gt; a^b)</td>
              <td style="text-align: center">-&gt;</td>
            </tr>
            <tr>
              <td style="text-align: center">~</td>
              <td>두 피 연산자의 모든 비트를 반전시킴 -&gt; 1의 보수 (ex&gt; ~a)</td>
              <td style="text-align: center">&lt;-</td>
            </tr>
          </tbody>
        </table>
      </blockquote>
    </li>
  </ul>
</blockquote>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>a: 10진수 3 -&gt; 2진수 0 0 0 0 0 0 1 1
b: 10진수 5 -&gt; 2진수 0 0 0 0 0 1 0 1

a &amp; b : 0 0 0 0 0 0 0 1
a | b : 0 0 0 0 0 1 1 1
a ^ b : 0 0 0 0 0 1 1 0
</code></pre></div></div>

<h3 id="비트-이동-연산자-쉬프트-연산자">비트 이동 연산자 (쉬프트 연산자)</h3>

<blockquote>
  <ul>
    <li><strong>*2, /2에 비해 속도가 빠름</strong>
      <blockquote>
        <table>
          <thead>
            <tr>
              <th style="text-align: center">연산자</th>
              <th>연산자 기능</th>
              <th style="text-align: center">결합방향</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td style="text-align: center">«</td>
              <td>앞의 피 연산자 비트 열을 뒤 피 연산자 만큼 왼쪽으로 이동하고 이동에 따른 빈 공간은 0으로 채움 (ex&gt; a«2)</td>
              <td style="text-align: center">-&gt;</td>
            </tr>
            <tr>
              <td style="text-align: center">»</td>
              <td>앞의 피 연산자 비트 열을 뒤 피 연산자 만큼 오른쪽으로 이동하고 이동에 따른 빈 공간은 음수는 1, 양수는 0으로 채움 (ex&gt; a»2)</td>
              <td style="text-align: center">-&gt;</td>
            </tr>
            <tr>
              <td style="text-align: center">»&gt;</td>
              <td>앞의 피 연산자 비트 열을 뒤 피 연산자 만큼 오른쪽으로 이동하고 이동에 따른 빈 공간은 0으로 채움 (ex&gt; a»&gt;2)</td>
              <td style="text-align: center">-&gt;</td>
            </tr>
          </tbody>
        </table>
      </blockquote>
    </li>
  </ul>
</blockquote>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>a = 10;
b = a &lt;&lt; 1   =&gt; *2와 동일
c = a &gt;&gt; 1   =&gt; /2와 동일
</code></pre></div></div>

<h3 id="논리-연산자">논리 연산자</h3>

<blockquote>
  <ul>
    <li><strong>논리 연산자</strong>
      <blockquote>
        <table>
          <thead>
            <tr>
              <th style="text-align: center">연산자</th>
              <th>연산자 기능</th>
              <th style="text-align: center">결합방향</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td style="text-align: center">&amp;</td>
              <td>두 개의 피 연산자 모두 true인 경우 true (ex&gt; a&gt;0 &amp; b&gt;0)</td>
              <td style="text-align: center">-&gt;</td>
            </tr>
            <tr>
              <td style="text-align: center">ㅣ</td>
              <td>두 개의 피 연산자가 하나라도 true이면 true (ex&gt; a&gt;0 ㅣ b&lt;0)</td>
              <td style="text-align: center">-&gt;</td>
            </tr>
            <tr>
              <td style="text-align: center">!</td>
              <td>단항 연산자로 피 연산자의 값이 false이면 true, true이면 false로 변경 (ex&gt; !a)</td>
              <td style="text-align: center">&lt;-</td>
            </tr>
            <tr>
              <td style="text-align: center">^</td>
              <td>두 피 연산자가 서로 다를 경우만 true, 같으면 false (ex&gt; true ^ false -&gt; true, true ^ true -&gt; false)</td>
              <td style="text-align: center">-&gt;</td>
            </tr>
          </tbody>
        </table>
      </blockquote>
    </li>
  </ul>
</blockquote>

<blockquote>
  <table>
    <tbody>
      <tr>
        <td>&amp;</td>
        <td>T</td>
        <td>F</td>
        <td> </td>
        <td> </td>
        <td>ㅣ</td>
        <td>T</td>
        <td>F</td>
      </tr>
      <tr>
        <td>T</td>
        <td>T</td>
        <td>F</td>
        <td> </td>
        <td> </td>
        <td>T</td>
        <td>T</td>
        <td>T</td>
      </tr>
      <tr>
        <td>F</td>
        <td>F</td>
        <td>F</td>
        <td> </td>
        <td> </td>
        <td>F</td>
        <td>T</td>
        <td>F</td>
      </tr>
    </tbody>
  </table>
</blockquote>

<blockquote>
  <ul>
    <li><strong>Short Circuit 연산자</strong>
      <blockquote>
        <table>
          <thead>
            <tr>
              <th style="text-align: center">연산자</th>
              <th>연산자 기능</th>
              <th style="text-align: center">결합방향</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td style="text-align: center">&amp;&amp;</td>
              <td>&amp;와 동일한 의미이나 앞의 피 연산자가 false이면 뒤의 피 연산자를 검사하지 않는다. (ex&gt; a&gt;0 &amp;&amp; b&gt;0)</td>
              <td style="text-align: center">-&gt;</td>
            </tr>
            <tr>
              <td style="text-align: center">ㅣㅣ</td>
              <td>ㅣ와 동일한 의미이나 앞의 피 연산자가 true이면 뒤의 피 연산자를 검사하지 않는다. (ex&gt; a&gt;0 ㅣㅣ b&gt;0)</td>
              <td style="text-align: center">-&gt;</td>
            </tr>
          </tbody>
        </table>
      </blockquote>
    </li>
  </ul>
</blockquote>

<h2 id="2-조건문">2. 조건문</h2>

<h3 id="if문">if문</h3>

<blockquote>
  <ul>
    <li><strong>if(_____)</strong>
      <blockquote>
        <p>(논리형) boolean b;<br />
(비교식) x&gt;=y<br />
(Method Call) isEven()</p>
      </blockquote>
    </li>
  </ul>
</blockquote>

<blockquote>
  <ul>
    <li><strong>if문 예제</strong></li>
  </ul>
</blockquote>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="mi">20</span><span class="o">;</span>
<span class="nc">String</span> <span class="n">grade</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>

<span class="k">if</span><span class="o">(</span><span class="n">a</span><span class="o">&gt;=</span><span class="mi">6</span><span class="o">){</span>                                 <span class="k">if</span><span class="o">(</span><span class="n">a</span><span class="o">&gt;=</span><span class="mi">19</span><span class="o">)</span>
  <span class="n">grade</span> <span class="o">=</span> <span class="s">"아동"</span><span class="o">;</span>                            <span class="n">grade</span> <span class="o">=</span> <span class="s">"성인"</span><span class="o">;</span>
<span class="o">}</span> <span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">a</span><span class="o">&gt;=</span><span class="mi">13</span><span class="o">){</span>                            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"성인"</span><span class="o">);</span>
  <span class="n">grade</span> <span class="o">=</span> <span class="s">"청소년"</span><span class="o">;</span>                        <span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">a</span><span class="o">&gt;=</span><span class="mi">13</span><span class="o">)</span>
<span class="o">}</span> <span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">a</span><span class="o">&gt;=</span><span class="mi">19</span><span class="o">){</span>                            <span class="n">grade</span> <span class="o">=</span> <span class="s">"청소년"</span><span class="o">;</span>
  <span class="n">grade</span> <span class="o">=</span> <span class="s">"성인"</span><span class="o">;</span>                          <span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">a</span><span class="o">&gt;=</span><span class="mi">6</span><span class="o">)</span>
<span class="o">}</span> <span class="n">esle</span><span class="o">{</span>                                      <span class="n">grade</span> <span class="o">=</span> <span class="s">"아동"</span><span class="o">;</span>
  <span class="n">grade</span> <span class="o">=</span> <span class="s">"유아"</span><span class="o">;</span>                          <span class="k">else</span>
<span class="o">}</span>                                            <span class="n">grade</span> <span class="o">=</span> <span class="s">"유아"</span><span class="o">;</span>

<span class="n">오류</span> <span class="n">코드</span>
</code></pre></div></div>

<blockquote>
  <ul>
    <li><strong>3항 연산자</strong></li>
  </ul>
</blockquote>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">a</span> <span class="o">=</span><span class="mi">10</span><span class="o">;</span>
<span class="nc">String</span> <span class="n">str</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>

<span class="k">if</span><span class="o">(</span><span class="n">a</span><span class="o">&gt;=</span><span class="mi">10</span><span class="o">){</span>
  <span class="n">str</span> <span class="o">=</span> <span class="s">"10 이상"</span><span class="o">;</span>
<span class="o">}</span> <span class="k">else</span><span class="o">{</span>
  <span class="n">str</span> <span class="o">=</span> <span class="s">"10 미만"</span><span class="o">;</span>
<span class="o">}</span>

<span class="mi">3</span><span class="n">항</span> <span class="n">연산자</span> <span class="n">사용</span>
<span class="n">str</span> <span class="o">=</span> <span class="n">a</span><span class="o">&gt;=</span><span class="mi">10</span> <span class="o">?</span> <span class="s">"10 이상"</span> <span class="o">:</span> <span class="s">"10 미만"</span><span class="o">;</span>
</code></pre></div></div>

<h3 id="switch문">switch문</h3>

<blockquote>
  <ul>
    <li><strong>switch(_____)</strong>
      <blockquote>
        <p>(정수호환) byte, short, char, int x;<br />
(Enum) Day.MONDAY<br />
(Class Object) Byte, Short, Character, Integer, String<br />
(Method Call) getNumber()</p>
      </blockquote>
    </li>
  </ul>
</blockquote>

<blockquote>
  <ul>
    <li><strong>switch문 예제</strong></li>
  </ul>
</blockquote>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">switch</span><span class="o">(</span><span class="n">value</span><span class="o">)</span>
<span class="k">case</span> <span class="mi">1</span><span class="o">:</span> <span class="o">...;</span>
<span class="k">case</span> <span class="mi">2</span><span class="o">:</span> <span class="o">...;</span> <span class="k">break</span><span class="o">;</span>
<span class="k">case</span> <span class="mi">3</span><span class="o">:</span> <span class="o">...;</span>
<span class="k">case</span> <span class="mi">4</span><span class="o">:</span> <span class="o">...;</span>
<span class="k">case</span> <span class="mi">5</span><span class="o">:</span> <span class="o">...;</span> <span class="k">break</span><span class="o">;</span>
<span class="k">default</span><span class="o">:</span>
 <span class="o">=&gt;</span> <span class="o">~</span><span class="n">부터</span> <span class="k">break</span> <span class="n">만나기</span> <span class="n">전</span> <span class="n">까지</span> <span class="n">실행</span>
 <span class="o">=&gt;</span> <span class="n">value값이</span> <span class="k">case</span> <span class="n">조건에</span> <span class="n">없으면</span> <span class="k">default</span> <span class="n">실행</span>
</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">month</span> <span class="o">=</span> <span class="mi">3</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">day</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
<span class="k">switch</span><span class="o">(</span><span class="n">month</span><span class="o">){</span>
  <span class="k">case</span> <span class="mi">2</span><span class="o">:</span>
    <span class="n">day</span> <span class="o">=</span> <span class="mi">29</span><span class="o">;</span> <span class="k">break</span><span class="o">;</span>
  <span class="k">case</span> <span class="mi">4</span><span class="o">:</span>
  <span class="k">case</span> <span class="mi">6</span><span class="o">:</span>
  <span class="k">case</span> <span class="mi">9</span><span class="o">:</span>
  <span class="k">case</span> <span class="mi">11</span><span class="o">:</span>
    <span class="n">day</span> <span class="o">=</span> <span class="mi">30</span><span class="o">;</span> <span class="k">break</span><span class="o">;</span>
  <span class="k">default</span><span class="o">:</span>
    <span class="n">day</span> <span class="o">=</span> <span class="mi">31</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>

<h2 id="etc-random-수-활용">etc. ★Random 수 활용★</h2>

<blockquote>
  <table>
    <thead>
      <tr>
        <th style="text-align: center">구분</th>
        <th>코드</th>
        <th>범위</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td style="text-align: center">Math.random()</td>
        <td>double d = Math.random()</td>
        <td>0.0 &lt;= d &lt; 1.0</td>
      </tr>
      <tr>
        <td style="text-align: center"> </td>
        <td>double d = Math.random()*N</td>
        <td>0.0 &lt;= d &lt; N.0</td>
      </tr>
      <tr>
        <td style="text-align: center"> </td>
        <td>int i = (int)(Math.random()*N)</td>
        <td>0 &lt;= i &lt;= N-1</td>
      </tr>
      <tr>
        <td style="text-align: center"> </td>
        <td>int i = (int)(Math.random()*N)+1</td>
        <td>1 &lt;= i &lt; N</td>
      </tr>
      <tr>
        <td style="text-align: center">Random rand = new Random();</td>
        <td> </td>
        <td> </td>
      </tr>
      <tr>
        <td style="text-align: center">rand.nextInt(N)</td>
        <td>int i = rand.nextInt(N)</td>
        <td>0 &lt;= i &lt; N</td>
      </tr>
      <tr>
        <td style="text-align: center"> </td>
        <td>int i = rand.nextInt(N)+1</td>
        <td>1 &lt;= i &lt;= N</td>
      </tr>
    </tbody>
  </table>
</blockquote>

<ul>
  <li>주사위를 던져서 나올 수 있는 경우의 수(1~6) 구하기 (Random 이용)</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="no">N</span> <span class="o">=</span> <span class="mi">6</span><span class="o">;</span>

<span class="kt">int</span> <span class="n">num</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)(</span><span class="nc">Math</span><span class="o">.</span><span class="na">random</span><span class="o">()*</span><span class="no">N</span><span class="o">)+</span><span class="mi">1</span><span class="o">;</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">num</span><span class="o">);</span>

<span class="nc">Random</span> <span class="n">rand</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Random</span><span class="o">();</span>
<span class="n">num</span> <span class="o">=</span> <span class="n">rand</span><span class="o">.</span><span class="na">nextInt</span><span class="o">(</span><span class="no">N</span><span class="o">)+</span><span class="mi">1</span><span class="o">;</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">num</span><span class="o">);</span>

<span class="n">num</span> <span class="o">=</span> <span class="n">rand</span><span class="o">.</span><span class="na">nextInt</span><span class="o">(</span><span class="mi">100</span><span class="o">)%</span><span class="no">N</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">num</span><span class="o">);</span>
</code></pre></div></div>

<ul>
  <li>주사위를 두 번 던져서 연속적으로 짝수 또는 홀수가 나오면 ‘A’를, 그렇지 않으면 ‘B’를 출력하는 코드</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="no">N</span> <span class="o">=</span> <span class="mi">6</span><span class="o">;</span>
<span class="nc">Random</span> <span class="n">rand</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Random</span><span class="o">();</span>
<span class="kt">int</span> <span class="n">num1</span> <span class="o">=</span> <span class="n">rand</span><span class="o">.</span><span class="na">nextInt</span><span class="o">(</span><span class="no">N</span><span class="o">)+</span><span class="mi">1</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">num2</span> <span class="o">=</span> <span class="n">rand</span><span class="o">.</span><span class="na">nextInt</span><span class="o">(</span><span class="no">N</span><span class="o">)+</span><span class="mi">1</span><span class="o">;</span>
<span class="nc">String</span> <span class="n">result</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>

<span class="kt">boolean</span> <span class="n">isNum1Even</span> <span class="o">=</span> <span class="n">num1</span><span class="o">%</span><span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="o">;</span>
<span class="kt">boolean</span> <span class="n">isNum2Even</span> <span class="o">=</span> <span class="n">num2</span><span class="o">%</span><span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="o">;</span>

<span class="n">result</span> <span class="o">=</span> <span class="n">isNum1Even</span> <span class="o">==</span> <span class="n">isNum2Even</span> <span class="o">?</span> <span class="s">"A"</span> <span class="o">:</span> <span class="s">"B"</span><span class="o">;</span>

<span class="n">또는</span>

<span class="n">result</span> <span class="o">=</span> <span class="o">(</span><span class="n">num1</span> <span class="o">+</span> <span class="n">num2</span><span class="o">)</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">?</span> <span class="s">"A"</span> <span class="o">:</span> <span class="s">"B"</span><span class="o">;</span>
</code></pre></div></div>]]></content><author><name>김경호</name></author><category term="Java" /><category term="Java" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">[Java 01. 기본 문법 및 응용 (Java의 특징, 변수, 데이터 타입)]</title><link href="http://localhost:4000/java/Java_Basic-1/" rel="alternate" type="text/html" title="[Java 01. 기본 문법 및 응용 (Java의 특징, 변수, 데이터 타입)]" /><published>2022-01-05T00:00:00+09:00</published><updated>2022-01-05T00:00:00+09:00</updated><id>http://localhost:4000/java/Java_Basic%201</id><content type="html" xml:base="http://localhost:4000/java/Java_Basic-1/"><![CDATA[<p><br /></p>

<h2 id="0-자바의-특징">0. 자바의 특징</h2>

<blockquote>
  <ul>
    <li>OOP is <strong>A.P.I.E</strong> ?
      <ul>
        <li>OOP(Object-Oriented-Programming = 객체지향 프로그래밍) is<br />
<strong>Abstraction. Polymorphism. Inheritance. Encapsulation</strong></li>
      </ul>
    </li>
    <li><strong>GC</strong>(Garbage Collection)
      <ul>
        <li>더 이상 사용하지 않는 메모리를 자동으로 정리하는 기능</li>
      </ul>
    </li>
  </ul>
</blockquote>

<h2 id="1-변수">1. 변수</h2>

<blockquote>
  <ul>
    <li>수학에서는 변하는 수 x</li>
    <li>컴퓨터에서는 메모리 공간(그릇)</li>
    <li>메모리 공간에 값(value)을 할당(assign) 후 사용</li>
    <li>공간의 크기는 타입별로 달라짐</li>
  </ul>
</blockquote>

<h2 id="2-type-이란">2. Type 이란?</h2>

<blockquote>
  <ul>
    <li>데이터의 종류</li>
    <li><strong>Primitive Type</strong> (기본형)
      <ul>
        <li>미리 정해진 크기의 Memory Size로 표현</li>
        <li>변수 자체에 값 저장</li>
      </ul>
    </li>
    <li><strong>Reference Type</strong> (참조형)
      <ul>
        <li>크기가 미리 정해질 수 없는 데이터의 표현</li>
        <li>변수에는 실제 값을 참조할 수 있는 주소만 저장</li>
      </ul>
    </li>
  </ul>
</blockquote>

<blockquote>
  <ul>
    <li>Primitive Type
      <blockquote>
        <table>
          <thead>
            <tr>
              <th style="text-align: center">구분</th>
              <th>Type</th>
              <th style="text-align: center">bit 수</th>
              <th>값</th>
              <th>Wrapper Class</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td style="text-align: center">논리형</td>
              <td>boolean</td>
              <td style="text-align: center"> </td>
              <td>true/false</td>
              <td>Boolean</td>
            </tr>
            <tr>
              <td style="text-align: center">정수형</td>
              <td>byte</td>
              <td style="text-align: center">8</td>
              <td>-2^7 ~ 2^7-1 (-128 ~ 127)</td>
              <td>Byte</td>
            </tr>
            <tr>
              <td style="text-align: center"> </td>
              <td>short</td>
              <td style="text-align: center">16</td>
              <td>-2^15 ~ 2^15-1 (-32768 ~ 32767)</td>
              <td>Short</td>
            </tr>
            <tr>
              <td style="text-align: center"> </td>
              <td>int</td>
              <td style="text-align: center">32</td>
              <td>-2^31 ~ 2^31-1 (-2147483648 ~ 2147483647, 대략 20억)</td>
              <td>Integer</td>
            </tr>
            <tr>
              <td style="text-align: center"> </td>
              <td>long</td>
              <td style="text-align: center">32</td>
              <td>-2^31 ~ 2^31-1 (-9223372036854775808 ~ 9223372036854775807)</td>
              <td>Long</td>
            </tr>
            <tr>
              <td style="text-align: center">실수형</td>
              <td>float</td>
              <td style="text-align: center">32</td>
              <td>float f = 0.1234567890123456789f; =&gt; 0.12345679</td>
              <td>Float</td>
            </tr>
            <tr>
              <td style="text-align: center"> </td>
              <td>double</td>
              <td style="text-align: center">64</td>
              <td>double d = 0.1234567890123456789; =&gt; 0.12345678901234568</td>
              <td>Double</td>
            </tr>
            <tr>
              <td style="text-align: center">문자형</td>
              <td>char</td>
              <td style="text-align: center">16</td>
              <td>\u0000 ~ \uffff(0~2^16-1)</td>
              <td>Character</td>
            </tr>
          </tbody>
        </table>

        <ul>
          <li><strong>총 8개</strong></li>
        </ul>
      </blockquote>
    </li>
  </ul>
</blockquote>

<blockquote>
  <ul>
    <li>Reference Type
      <blockquote>
        <ul>
          <li>나머지 모든 데이터 타입(String, int[], Node와 같은 사용자 정의 타입 …)</li>
        </ul>
      </blockquote>
    </li>
  </ul>
</blockquote>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 기본문제</span>
<span class="kt">int</span> <span class="n">i1</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">MAX_VALUE</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">i2</span> <span class="o">=</span> <span class="n">i1</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span>

<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">i2</span><span class="o">);</span>

<span class="c1">//실행결과</span>
<span class="c1">//overflow</span>
</code></pre></div></div>

<h2 id="3-형-변환type-casting">3. 형 변환(Type Casting)</h2>

<blockquote>
  <ul>
    <li>변수의 타입을 다른 타입으로 변환하는 것
      <ul>
        <li>char &lt;= =&gt; int</li>
      </ul>
    </li>
    <li>Primitive는 Primitive끼리, Reference는 Reference기리 형 변환 가능
      <ul>
        <li>boolean은 다른 기본 타입과 호환되지 않음</li>
        <li>기본 타입과 참조형의 형 변환을 위해서 Wrapper 클래스 활용</li>
      </ul>
    </li>
    <li>형 변환 방법
      <ul>
        <li>형 변환 연산자(괄호) 사용</li>
      </ul>
    </li>
  </ul>
</blockquote>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">double</span> <span class="n">d</span> <span class="o">=</span> <span class="mf">100.5</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">result</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span><span class="n">d</span><span class="o">;</span>
<span class="c1">// d = 100.5</span>
<span class="c1">// result = 100</span>
</code></pre></div></div>

<blockquote>
  <ul>
    <li>타입의 표현 범위
      <ul>
        <li>byte -&gt; short -&gt; int -&gt; long -&gt; float -&gt; double</li>
        <li>char  -&gt; int …</li>
      </ul>
    </li>
    <li>타입의 표현 범위가 커지는 방향으로 할당할 경우는 묵시적 형 변환 발생</li>
    <li>명시적 형 변환은 값 손실이 발생할 수 있다.</li>
    <li>묵시적 형 변환은 값 손실 걱정없이 JVM이 서비스 해줌</li>
  </ul>
</blockquote>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//묵시적 형 변환(값 손실 x)       //명시적 형 변환 (값 손실 o)</span>
<span class="kt">byte</span> <span class="n">b</span> <span class="o">=</span> <span class="mi">10</span><span class="o">;</span>                    <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">300</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span><span class="n">b</span><span class="o">;</span>                 <span class="kt">byte</span> <span class="n">b</span> <span class="o">=</span> <span class="o">(</span><span class="kt">byte</span><span class="o">)</span><span class="n">i</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">i2</span> <span class="o">=</span> <span class="n">b</span><span class="o">;</span>
</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//기본문제</span>
<span class="kt">int</span> <span class="n">i1</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">MAX_VALUE</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">i2</span> <span class="o">=</span> <span class="n">i1</span> <span class="o">+</span> <span class="mi">1</span><span class="o">;</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">i2</span><span class="o">);</span> <span class="c1">// -2147483648</span>

<span class="kt">long</span> <span class="n">l1</span> <span class="o">=</span> <span class="n">i1</span> <span class="o">+</span> <span class="mi">1</span><span class="o">;</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">l1</span><span class="o">);</span> <span class="c1">// -2147483648</span>

<span class="kt">long</span> <span class="n">l2</span> <span class="o">=</span> <span class="o">(</span><span class="kt">long</span><span class="o">)(</span><span class="n">i1</span> <span class="o">+</span> <span class="mi">1</span><span class="o">);</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">l2</span><span class="o">);</span> <span class="c1">// -2147483648</span>

<span class="kt">long</span> <span class="n">l3</span> <span class="o">=</span> <span class="o">(</span><span class="kt">long</span><span class="o">(</span><span class="n">i1</span><span class="o">)</span> <span class="o">+</span> <span class="mi">1</span><span class="o">);</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">l3</span><span class="o">);</span> <span class="c1">// 2147483648</span>

<span class="kt">int</span> <span class="n">i3</span> <span class="o">=</span> <span class="mi">1000000</span> <span class="o">*</span> <span class="mi">1000000</span> <span class="o">/</span> <span class="mi">100000</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">i4</span> <span class="o">=</span> <span class="mi">1000000</span> <span class="o">/</span> <span class="mi">100000</span> <span class="o">*</span> <span class="mi">100000</span><span class="o">;</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">i3</span> <span class="o">+</span> <span class="s">" : "</span> <span class="o">+</span> <span class="n">i4</span><span class="o">);</span> <span class="c1">// -7273 : 1000000 , 컴퓨터는 앞에서부터 계산하기 때문에</span>

</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">k</span> <span class="o">=</span> <span class="mi">66</span><span class="o">;</span>
<span class="kt">char</span> <span class="n">c</span> <span class="o">=</span> <span class="o">(</span><span class="kt">char</span><span class="o">)</span><span class="n">k</span><span class="o">;</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">c</span><span class="o">);</span> <span class="c1">// B</span>

<span class="n">c</span><span class="o">=</span><span class="sc">'A'</span><span class="o">;</span>
<span class="n">k</span><span class="o">=</span><span class="n">c</span><span class="o">;</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">k</span><span class="o">);</span> <span class="c1">//65</span>

<span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">10</span><span class="o">/</span><span class="mi">3</span><span class="o">;</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">i</span><span class="o">);</span> <span class="c1">//3</span>

<span class="kt">float</span> <span class="n">f</span> <span class="o">=</span> <span class="mi">10</span><span class="o">/</span><span class="mi">3</span><span class="o">;</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">f</span><span class="o">);</span> <span class="c1">//3.0</span>

<span class="kt">float</span> <span class="n">f2</span> <span class="o">=</span> <span class="mi">10</span><span class="n">f</span> <span class="o">/</span> <span class="mi">3</span><span class="no">F</span><span class="o">;</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">f2</span><span class="o">);</span> <span class="c1">//3.3333333</span>

<span class="kt">double</span> <span class="n">d</span> <span class="o">=</span> <span class="mi">10</span><span class="n">d</span> <span class="o">/</span> <span class="mi">3</span><span class="no">D</span><span class="o">;</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">d</span><span class="o">);</span> <span class="c1">//3.3333333333333335</span>

<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">((</span><span class="mi">10</span><span class="o">/</span><span class="mi">3</span><span class="o">)*</span><span class="mi">3</span><span class="o">);</span> <span class="c1">//9</span>
</code></pre></div></div>

<h3 id="wrapper-클래스">Wrapper 클래스?</h3>

<blockquote>
  <p><strong>래퍼 클래스(Wrapper Class)</strong>는 산술연산을 위해 정의된 클래스가 아니므로 인스턴스에 저장된 값을 변경할 수 없다.<br />
단지, 값을 참조하기 위해 새로운 인스턴스를 생성하고, 생성된 인스턴스 값만을 참고할 수 있다.<br />
<strong>박싱</strong> : 기본타입 -&gt; 래퍼클래스 / <strong>언박싱</strong> : 래퍼클래스 -&gt; 기본타입 (JDK 1.5부터는 컴파일러가 자동처리, 오토 박싱, 오토 언박싱)</p>
</blockquote>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">Integer</span> <span class="n">num</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Integer</span><span class="o">(</span><span class="mi">17</span><span class="o">);</span> <span class="c1">//박싱</span>
<span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="n">num</span><span class="o">.</span><span class="na">intValue</span><span class="o">();</span> <span class="c1">//언박싱</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">n</span><span class="o">);</span>

<span class="nc">Character</span> <span class="n">ch</span> <span class="o">=</span> <span class="sc">'X'</span><span class="o">;</span> <span class="c1">// 오토박싱, Character ch = new Character('X')</span>
<span class="kt">char</span> <span class="n">c</span> <span class="o">=</span> <span class="n">ch</span><span class="o">;</span> <span class="c1">//오토언박싱, char c = ch.charValue();</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">c</span><span class="o">);</span>

<span class="c1">//실행결과</span>
<span class="c1">//17</span>
<span class="c1">//X</span>
</code></pre></div></div>]]></content><author><name>김경호</name></author><category term="Java" /><category term="Java" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">[Markdown Basic Sytax]</title><link href="http://localhost:4000/markdown/aboutMarkDown/" rel="alternate" type="text/html" title="[Markdown Basic Sytax]" /><published>2022-01-04T00:00:00+09:00</published><updated>2022-01-04T00:00:00+09:00</updated><id>http://localhost:4000/markdown/aboutMarkDown</id><content type="html" xml:base="http://localhost:4000/markdown/aboutMarkDown/"><![CDATA[<p><br /></p>

<p>GitHub에서 README 파일을 작성할 때나, 블로그에 포스팅을 하거나, 간단한 문서를 만들 때 가볍게 사용하는 문서작성 용도로 자주 사용된다. 그래서 오늘은 이 마크다운 언어에 대해서 알아보려고 한다.</p>

<h2 id="0-마크다운이란">0. 마크다운이란?</h2>

<p><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Markdown-mark.svg/300px-Markdown-mark.svg.png" alt="mdLogo" /></p>

<p><br /></p>

<ul>
  <li>일반 텍스트 기반의 경량 마크업 언어</li>
  <li>일반 텍스트로 서식이 있는 문서를 작성하는데 사용</li>
  <li>일반 마크업 언어에 비해 문법이 쉽고 간단</li>
  <li>HTML, 리치텍스트(RTF)등 서식 문서로 변환이 용이
    <ul>
      <li>응용 소프트웨어와 함께 배포되는 README 파일이나 온라인 게시물 등에 쓰임</li>
    </ul>
  </li>
</ul>

<h3 id="0-1-마크다운-에디터">0-1. 마크다운 에디터</h3>

<ul>
  <li>마크다운 에디터는 메모장이나 아무 에디터를 사용해도 무방</li>
  <li>단, 미리보기 기능에 따라 사용성에서 큰 차이</li>
  <li>따라서 미리보기 기능을 제공하는 에디터 사용 추천(대부분의 IDE에서 (기본 or 확장기능으로) 제공하고 있기는 함.)
    <ul>
      <li>ex) VS Code</li>
      <li>미리보기 웹사이트<a href="https://www.makeareadme.com/">(Make a README)</a></li>
    </ul>
  </li>
</ul>

<h2 id="1-문법syntax">1. 문법(Syntax)</h2>

<ul>
  <li>
    <p>제목 : title</p>

    <ul>
      <li>#을 1~6개 사용하여 크기 조절(&lt;H1&gt; ~ &lt;H6&gt; 지원)</li>
      <li>HR(Horizontal Rule, 수평선 구분자)와 결합해서 사용 가능</li>
    </ul>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># 제목1 - H1
## 제목2 - H2
### 제목3 - H3
#### 제목4 - H4
##### 제목5 = H5
###### 제목6 - H6

// HR(Horizontal Rule, 수평선) 구분자와 결합해서 사용
제목 텍스트 1
___
</code></pre></div>    </div>

    <h1 id="제목1---h1">제목1 - H1</h1>

    <h2 id="제목2---h2">제목2 - H2</h2>

    <h3 id="제목3---h3">제목3 - H3</h3>

    <h4 id="제목4---h4">제목4 - H4</h4>

    <h5 id="제목5--h5">제목5 = H5</h5>

    <h6 id="제목6---h6">제목6 - H6</h6>

    <p><br /></p>
    <h1 id="제목-텍스트-1">제목 텍스트 1</h1>
    <hr />
  </li>
  <li>
    <p>줄바꿈 : Line Breaks</p>

    <ul>
      <li>마크다운 문법에서 엔터를 써도 개행이 되지 않음
        <ul>
          <li>엔터키 2번 : 단락 구분</li>
        </ul>
      </li>
      <li>’ ‘ : 공백 2번 입력 -&gt; 줄바꿈(개행</li>
      <li>
        <table>
          <tbody>
            <tr>
              <td><br /></td>
              <td> </td>
              <td><br /> : Tag로도 가능</td>
            </tr>
          </tbody>
        </table>
      </li>
    </ul>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>// 공백 2개 입력 X
안녕하세요.
김경호, 개발자입니다.

// 공백 2개 입력
안녕하세요.
김경호, 개발자입니다.

// &lt;br&gt;태그
안녕하세요.&lt;br&gt;
김경호, 개발자입니다.
</code></pre></div>    </div>

    <p>안녕하세요.
김경호, 개발자입니다.</p>

    <p>안녕하세요.<br />
김경호, 개발자입니다.</p>

    <p>안녕하세요.<br />
김경호, 개발자입니다.</p>
  </li>
  <li>
    <p>인용문 : BlockQuote</p>

    <ul>
      <li>블럭인용문자(‘&gt;’) 사용</li>
    </ul>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt; 첫번째 블록
&gt;&gt; 두번째 블록
&gt;&gt;&gt; 세번째 블록
</code></pre></div>    </div>

    <blockquote>
      <p>첫번째 블록</p>

      <blockquote>
        <p>두번째 블록</p>

        <blockquote>
          <p>세번쨰 블록
<br /></p>
        </blockquote>
      </blockquote>
    </blockquote>

    <ul>
      <li>블록 안에 다른 마크다운 요소를 넣을 수 있음</li>
    </ul>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt; 첫번째 블록
&gt; 1. 두번쨰 블록
&gt; + 세번째 블록
</code></pre></div>    </div>

    <blockquote>
      <p>첫번째 블록</p>

      <ol>
        <li>두번쨰 블록</li>
      </ol>

      <ul>
        <li>세번째 블록
<br /></li>
      </ul>
    </blockquote>
  </li>
  <li>
    <p>목록 : List</p>

    <ul>
      <li>순서있는 목록 : 숫자와 마침표 사용</li>
    </ul>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>// 1. 2. 3. 이런식으로 해도 되지만, 순서대로 번호를 매겨서 표시됨.
1. 첫번째 아이템
  1. 하위 아이템
  4. 하위 아이템
1. 두번째 아이템
2. 세번쨰 아이템
</code></pre></div>    </div>

    <ol>
      <li>첫번째 아이템</li>
      <li>하위 아이템</li>
      <li>하위 아이템</li>
      <li>두번째 아이템</li>
      <li>세번쨰 아이템</li>
    </ol>

    <ul>
      <li>순서없는 목록 : (*, - , +) 사용, 혼합가능</li>
    </ul>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>+ 첫번째 아이템
  - 1-1 아이템
  - 1-2 아이템
  - 1-3 아이템
+ 두번쨰 아이템
  * 2-1 아이템
  * 2-2 아이템
+ 세번쨰 아이템
  + 3-1 아이템
    + 3-1-1 아이템
  + 3-2 아이템
</code></pre></div>    </div>

    <ul>
      <li>첫번째 아이템
        <ul>
          <li>1-1 아이템</li>
          <li>1-2 아이템</li>
          <li>1-3 아이템</li>
        </ul>
      </li>
      <li>두번쨰 아이템
        <ul>
          <li>2-1 아이템</li>
          <li>2-2 아이템</li>
        </ul>
      </li>
      <li>세번쨰 아이템
        <ul>
          <li>3-1 아이템
            <ul>
              <li>3-1-1 아이템</li>
            </ul>
          </li>
          <li>3-2 아이템</li>
        </ul>
      </li>
    </ul>

    <p><br /></p>
  </li>
  <li>
    <p>강조(글씨 꾸미기) : Emphasis</p>

    <ul>
      <li>볼드, 이텔릭, 밑줄, 취소선 등 이용가능</li>
    </ul>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>*single asterisks 이텔릭체*
_single underscores 이텔릭체_
**double asterisks 볼드체**
__double underscores 볼드체__
***tripple underscores 볼드+이텔릭체***
___tripple underscores 볼드+이텔릭체___
~~cancelline 취소선~~
**~~bold cancelline 볼드+취소선~~**
&lt;u&gt;underline - 밑줄&lt;/u&gt;
</code></pre></div>    </div>

    <p><em>single asterisks 이텔릭체</em><br />
<em>single underscores 이텔릭체</em><br />
<strong>double asterisks 볼드체</strong><br />
<strong>double underscores 볼드체</strong><br />
<strong><em>tripple underscores 볼드+이텔릭체</em></strong><br />
<strong><em>tripple underscores 볼드+이텔릭체</em></strong><br />
<del>cancelline 취소선</del><br />
<strong><del>bold cancelline 볼드+취소선</del></strong><br />
<u>underline - 밑줄</u></p>

    <p><br /></p>
  </li>
  <li>
    <p>구분선 : Contour</p>

    <ul>
      <li>수평선(Horizontal Rule) 사용법</li>
    </ul>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>구분선1
- - -
// --- : 제목 문법과 중복되므로 주의!

구분선1-1
---

구분선1-2
------------------------------

구분선2
***

구분선2-1
* * *

구분선2-2
************************************

구분선3
___
</code></pre></div>    </div>

    <p>구분선1</p>
  </li>
</ul>

<hr />

<p>구분선1-1</p>

<hr />

<p>## 구분선1-2</p>

<p><br /></p>

<p>구분선2</p>

<hr />

<p>구분선2-1</p>

<hr />

<p>구분선2-2</p>

<hr />

<p><br /></p>

<p>구분선3</p>

<hr />

<p><br /></p>

<ul>
  <li>코드 : Code
    <ul>
      <li>인라인(inline) 코드
<code class="language-plaintext highlighter-rouge">&lt;img&gt;</code> 태그를 사용하면 본문에 이미지를 삽입할 수 있습니다.</li>
      <li>블록(block) 코드</li>
    </ul>
  </li>
</ul>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="p">```</span><span class="nl">bash
</span>    <span class="nv">$ </span>git push origin master
    <span class="p">```</span><span class="sb">

    ```python
    print("hello world!")
    ```

    ```java
    public static void main(String[] args){
      System.out.println("Hello, world");
    }
    ```
</span></code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>git push origin master
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="s">"hello world!"</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
  <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Hello, world"</span><span class="o">);</span>
<span class="o">}</span>
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>
    <p>표 : Table</p>

    <ul>
      <li>본문에 테이블 삽입</li>
    </ul>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>|Column1(Left[Default])|Column2(Center)|Column3(Right)|
|---|:---:|---:| // 표를 정렬하는 방법
|김경호|개발자|JAVA|
|rudgh46|BackEnd|JAVA|
|제|목표 도메인은|FullStack입니다.|
|My|target Domain is|FullStack|
</code></pre></div>    </div>

    <table>
      <thead>
        <tr>
          <th>Column1(Left<strong>Default</strong>)</th>
          <th style="text-align: center">Column2(Center)</th>
          <th style="text-align: right">Column3(Right)</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>김경호</td>
          <td style="text-align: center">개발자</td>
          <td style="text-align: right">JAVA</td>
        </tr>
        <tr>
          <td>rudgh46</td>
          <td style="text-align: center">BackEnd</td>
          <td style="text-align: right">JAVA</td>
        </tr>
        <tr>
          <td>제</td>
          <td style="text-align: center">목표 도메인은</td>
          <td style="text-align: right">FullStack입니다.</td>
        </tr>
        <tr>
          <td>My</td>
          <td style="text-align: center">target Domain is</td>
          <td style="text-align: right">FullStack</td>
        </tr>
      </tbody>
    </table>

    <p><br /></p>
  </li>
  <li>
    <p>링크 : Link</p>

    <ul>
      <li>문서 작성 시, 특정 사이트를 링크할 때 사용</li>
    </ul>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>// [Title](link) : 일반적으로 사용되는 형식
[My GitHub](https://github.com/rudgh46)

// &lt;link Address&gt; : 자동 링크 사용
&lt;https://github.com/rudgh46&gt;

// [link keyword][id] : 참조 링크 사용
// [id] : URL "Optional Title here
Link : [Github][My Github Link]
[My Github Link]: https://github.com/rudgh46 "Go to rudgh46's Github"
</code></pre></div>    </div>

    <p><a href="https://github.com/rudgh46," title="Go to my Github">My GitHub</a></p>

    <p><a href="https://github.com/rudgh46">https://github.com/rudgh46</a></p>

    <p>Link : [Github][githublink]
[githubLink]: https://github.com/rudgh46 “Go to rudgh46’s Github”
(이거 왜 안되징…)</p>
  </li>
  <li>
    <p>이미지 삽입 : Image</p>

    <ul>
      <li>본문에 이미지를 삽입</li>
      <li>사이즈 조정 및 정렬은 HTML <img /> Tag 사용</li>
    </ul>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>![TEXT](https://imageurl)
![TEXT](./로컬이미지경로.확장자 "이미지설명")
![TEXT](data:image/svg+xml;base64,이미지데이터)

// 참조링크를 이용한 이미지 삽입
![TEXT][ClassE]
[ClassE](https://imageurl "E클래스 이미지")

// 이미지에 링크 걸기
![TEXT](https://imageurl, "이미지설명")(LinkURL)

// HTML &lt;img&gt; Tag 사용, 크기 및 정렬 가능
&lt;img src="https://cdn.eyesmag.com/content/uploads/sliderImages/2021/02/24/the-new-mercedes-benz-c-class-2021-01-fcc19468-f66c-467a-870f-dc1c7aa29e84.jpg" width="200px"&gt;

&lt;p align="center"&gt;&lt;img src="https://www.motorgraph.com/news/photo/202102/27134_86118_4323.jpg" width="400px"&gt;&lt;/p&gt;
</code></pre></div>    </div>

    <p><img src="https://cdn.eyesmag.com/content/uploads/sliderImages/2021/02/24/the-new-mercedes-benz-c-class-2021-01-fcc19468-f66c-467a-870f-dc1c7aa29e84.jpg" width="400px" /></p>

    <p align="center"><img src="https://www.motorgraph.com/news/photo/202102/27134_86118_4323.jpg" width="400px" /></p>
  </li>
</ul>

<h2 id="2-장단점">2. 장단점</h2>

<ul>
  <li>
    <p>장점</p>

    <ul>
      <li>문법이 쉽고 직관적</li>
      <li>지원 가능한 플랫폼과 프로그램이 다양</li>
      <li>다양한 형태로 변환 가능</li>
      <li>Text 형식으로 형상관리를 통한 변경이력관리가 용이</li>
      <li>별도 도구 없이 편집가능</li>
      <li>Text File이라서 용량이 적음</li>
    </ul>
  </li>
  <li>
    <p>단점</p>
    <ul>
      <li>아직까지 표준이 존재 X</li>
      <li>Tool/Viewer에 따라 경과물이 다르게 출력</li>
    </ul>
  </li>
</ul>

<h1 id="참고-사이트"><a href="https://www.psjco.com/72">참고 사이트</a></h1>]]></content><author><name>김경호</name></author><category term="Markdown" /><category term="markdown" /><category term="syntax" /><category term="blog" /><category term="favicon" /><category term="disqus" /><category term="google analytics" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">[Git test]</title><link href="http://localhost:4000/git%20&%20github/gitTestPost/" rel="alternate" type="text/html" title="[Git test]" /><published>2022-01-03T00:00:00+09:00</published><updated>2022-01-03T00:00:00+09:00</updated><id>http://localhost:4000/git%20&amp;%20github/gitTestPost</id><content type="html" xml:base="http://localhost:4000/git%20&amp;%20github/gitTestPost/"><![CDATA[<p><br /></p>

<h2 id="test-2">Test 2</h2>

<p>for git</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$git</span> commit <span class="nt">-m</span> <span class="s2">"Initial Commit"</span>
</code></pre></div></div>]]></content><author><name>김경호</name></author><category term="Git &amp; Github" /><category term="minimal mistakes" /><category term="jekyll" /><category term="blog" /><category term="favicon" /><category term="disqus" /><category term="google analytics" /><summary type="html"><![CDATA[]]></summary></entry></feed>